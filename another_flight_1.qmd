---
title: "Mini Project 1"
author: 
  - Albert Chui (albertchui)
  - Joseph Zaki (josephzaki)
date: "April 21, 2024"
format: pdf
fontsize: 12pt
number-sections: TRUE
linkcolor: purple
geometry:
  - margin=1in
toc: TRUE
---

# Abstract {#sec-abstract}

\begin{abstract}
In this paper we explore data from the United States Bureau of Transportation Statistics detailing 1,267,353 domestic flights routed through California in 2023. First, we explored flights routed through Santa Barbara Airport (SBA). We identified seasonal highs in flight counts occurring between August and October while seasonal lows occurred between December and February. We also observed what may be the effects of jetstreams in the atmosphere which led to East-bound flights having shorter durations than West-bound flights. In exmainig the entire dataset, we identified the distributions of flight departure and arrival times in order to observe the most and least common flight times. Last, we compared departure and arrival delays across the months of the year finding that March and June had the highest median arrival and departure delays.
\end{abstract}

```{r, echo = F, results='hide', include=F}
library("tidyverse")
library("pander")
library("reshape2")
```

# Combining Dataframes 
Result of `dim(flights)`:
```{r, echo = F}
vector_flight_data <- c("data/CA_Flights_Jan.csv","data/CA_Flights_Feb.csv","data/CA_Flights_Mar.csv","data/CA_Flights_Apr.csv","data/CA_Flights_May.csv","data/CA_Flights_Jun.csv","data/CA_Flights_Jul.csv","data/CA_Flights_Aug.csv","data/CA_Flights_Sept.csv","data/CA_Flights_Oct.csv","data/CA_Flights_Nov.csv","data/CA_Flights_Dec.csv")

list_flight_data <- lapply(vector_flight_data, FUN = read.csv)

flights <- bind_rows(list_flight_data)

flights %>% dim()
```

After combining the CA Flight Data for each month into a single dataframe called `flights`, we see from the output of `dim(flights)` that this dataset contains 14 variables on 1,267,353 observational units (flights) listed below. We also see that missing values are encoded as `NA`.

The table below describes each column of our `flights` dataframe:

| VARIABLE | DESCRIPTION |
|----------|:------------|
|YEAR|This is the year the flight took place, for this dataset, all values are 2023.|
|MONTH|This is the month the flight took place represented as numeric values 1-12 for January-December.|
|DAY_OF_MONTH|This is the day of the month the flight took place represented as numeric values from 1-31.|
|OP_UNIQUE_CARRIER|This is the airline carrier associated with the flight represented as a two character abbreviation.|
|ORIGIN|This is the airport of origin for the flight represented as a three character airport code.|
|DEST|This is the destination airport for the flight represented as a three character airport code.|
|CRS_DEP_TIME|This is the scheduled departure time of the flight represented in 24-hour time.|
|DEP_TIME|This is the actual departure time of the flight represented in 24-hour time.|
|DEP_DELAY|This is the delay in departure time in minutes (DEP_TIME - CRS_DEP_TIME).|
|CRS_ARR_TIME|This is the scheduled arrival time of the flight represented in 24-hour time.|
|ARR_TIME|This is the actual arrival time of the flight represented in 24-hour time.|
|ARR_DELAY|This is the delay in arrival time in minutes (ARR_TIME - CRS_ARR_TIME).|
|CRS_ELAPSED_TIME|This is the scehduled flight duration in minutes.|
|ACTUAL_ELAPSED_TIME|This is the actual flight duration in minutes.|

# Add Airport Information
In addition to the data found in `flights`, we have information about each airport stored in `Airport_Info.csv`. By merging these data sets, we can easily reference airport information and flight information from one place. Merging these data sets leads to the following columns being added to `flights`:

| VARIABLE | DESCRIPTION |
|----------|:------------|
|ORIGIN_ARPT_NAME|This is the full name of the airport of origin for the flight.|
|lon_origin|This is the longitudinal coordinate for the flight's airport of origin.|
|lat_origin|This is the latitudinal coordinate for the flight's airport of origin.|
|DEST_ARPT_NAME|This is the full name of the destination airport for the flight.|
|lon_dest|This is the longitudinal coordinate for the flight's destination airport.|
|lat_dest|This is the latitudinal coordinate for the flight's destination airport.|

We have also altered the `MONTH` column to represent months as their full names rather than integers (e.g. "January" instead of 1).
```{r, echo = F}
airport <- read.csv("data/Airport_Info.csv")

# adding lon and lat airport data to flights 
flights <- left_join(
   flights, 
   airport, 
  by = join_by(`ORIGIN` == `ARPT_ID`)
) %>%
  rename("ORIGIN_ARPT_NAME" = "ARPT_NAME", "lon_origin" = "x", "lat_origin" = "y") %>%
  left_join(
    airport, 
    by = join_by(`DEST` == `ARPT_ID`)
    ) %>%
  rename("DEST_ARPT_NAME" = "ARPT_NAME", "lon_dest" = "x", "lat_dest" = "y")

# making month data more descriptive

month_names <- factor(month.name, ordered = T, levels = month.name)

flights$MONTH <-  month_names[flights$MONTH]
```

# Explore Santa Barbara Airport
In this section, we explore flights routing through Santa Barabara Airport (SBA). Below is a list of the 10 airports that had flights routed through SBA in 2023 along with a map of these airports with SBA in red.

```{r, echo = F}
SBA_flights <- filter(flights, `ORIGIN` == "SBA" | `DEST` == "SBA")

origin_SBA <- SBA_flights$ORIGIN_ARPT_NAME %>% unique()
dest_SBA <- SBA_flights$DEST_ARPT_NAME %>% unique()

unique_flights_SBA <- c(origin_SBA, dest_SBA) %>% unique()
sort(unique_flights_SBA)[-10]
```
```{r, echo = F, warning=F}
states <- map_data("state")

SBA_plotting <- data.frame(ARPT_NAME = unique_flights_SBA) %>% 
  left_join(
    airport,
    by = join_by(
      `ARPT_NAME` == `ARPT_NAME`
    )
  ) %>%
  rename("longitude" = x, "latitude" = y)

ggplot(data = SBA_plotting) +
  geom_polygon(data = states,
               aes(x = long, y = lat, group = group),
               fill = "grey90",
               colour = "grey50") +
  coord_quickmap() +
  theme_minimal() +
  geom_point(
    aes(x = longitude, y = latitude)
  ) +
  geom_point(data = filter(SBA_plotting, ARPT_ID == "SBA"),
             aes(x = longitude, y= latitude, col = 'red')) +
  labs(x = "Longitude", y = "Latitude") +
  theme(legend.position = 'None')

```


By plotting the number of flights routing through SBA each month, we can see that the winter months of December, January, and February are typically the slowest, while the late summer and early fall months of August, September and October are busiest.
```{r, fig.width= 10, echo = F}
MONTH_count <- SBA_flights %>%
  group_by(MONTH) %>%
  summarise(n = n())

ggplot(MONTH_count, aes(MONTH, n)) +
  geom_point() +
  geom_line(aes(as.numeric(MONTH), n)) +
  labs(title = 'Flights per Month', x = 'Month', y = 'No. of Flights')
```


Separating this information over two separate graphs, one for arrival and one for departure, reveals that there are the same amounts of flights arriving as departing in each month meaning the flights follow the same seasonal patterns as we identified when the arrivals and departures were combined.
```{r, echo = F, fig.width= 10, warning=F}
SBA_flights %>%
  mutate(ORIGIN_OR_DEST = ifelse(ORIGIN == "SBA", "Departing from SBA", "Arriving in SBA")) %>%
  group_by(MONTH, ORIGIN_OR_DEST) %>%
  summarise(num_flights = n(), .groups = 'drop') %>%
  ggplot(aes(x = MONTH, y = num_flights)) + 
  geom_point() +
  geom_line(aes(as.numeric(MONTH), num_flights))+
  facet_wrap("ORIGIN_OR_DEST") +
  labs(title = "Flights per Month split by Arrival or Departure in SBA", x = "Month", y = "No. of Flights") +
  theme(
    axis.text.x = element_text(angle = 20))
```

By graphing the distributions of flights routed through SBA in side by side box plots and separating them based on whether they are departing from or arriving in Santa Barbara, we observe that there is a difference in distributions for flights travelling to or from the Eastern United States. In this dataset, only two airports far to the East of Santa Barbara have flights that route through SBA. These airports are Denver International Airport (DEN) and Dallas Fort Worth International Airport (DFW). For both of these airports, flights departing from SBA and travelling East have much shorter flight durations than those travelling West to SBA. This is possibly due to the jetstreams^[https://www.noaa.gov/jetstream/global/jet-stream] that travel Eastward which allow for higher airspeeds when travelling West to East.
```{r, echo = F, warning = F, fig.width = 10, fig.height = 5}
SBA_flights %>%
  mutate(ORIGIN_OR_DEST = ifelse(ORIGIN == "SBA", "Departing from SBA", "Arriving in SBA"), other_airport = ifelse(ORIGIN == "SBA", DEST, ORIGIN)) %>%
  ggplot(aes(x = other_airport,
             y = ACTUAL_ELAPSED_TIME,
             fill = ORIGIN_OR_DEST)) +
  geom_boxplot(staplewidth = 0.5)+
  theme_minimal(base_size = 12) +
  labs(x = "Airport", 
       y = "Flight Duration in Minutes", 
       title = "Distributions of Flight Durations by Airport", 
       subtitle = "Grouped by Arrival in/Departure from SBA",
       fill = "Arriving or Departing")
```
## Investigate Delays

First, we examine the distributions of flight departure delays by airline. From the below box plots, we see that it is significantly more common for flights to depart after their scheduled departure time rather than before, which is expected. Additionally, we see that the median departure delays do not vary much from airline to airline, which we can confirm with the table below. The table also indicates that on average, flights across all airlines tend to depart before their scheduled time. Also from the box plot, we can see that Envoy Air was most likely to have flights depart on time, while American Airlines, Southwest Airlines, and United Airlines were most likely to have a flight depart late.
```{r, warning = F, echo=F, fig.width = 10, fig.height=10}
carrier_codes <- read.csv("data/Carrier_Codes.csv")
SBA_flights_w_Airline <- SBA_flights %>%
  left_join(
    carrier_codes,
    by = join_by(
      OP_UNIQUE_CARRIER == Code
    )
  ) %>%
  rename(Airline = Description)

SBA_flights_w_Airline %>%
  ggplot(aes(x = Airline,
             y = DEP_DELAY)) +
  geom_boxplot(staplewidth = 0.25) +
  ylim(-50,300) +
  labs(x = "Airline", y = "Departure Delay in minutes", title = "Distribution of Departure Delays by Airline") +
  theme_minimal(base_size = 12)

SBA_flights_w_Airline %>%
  group_by(Airline) %>%
  summarise("Median Departure Delay" = median(DEP_DELAY, na.rm = T)) %>%
  pander()
```

Next, we examine the relationship between Arrival Delays and Departure Delays. From this plot, we see that for all airlines, the median Departure Delay is greater than the median Arrival delay. This may indicate that most causes of delay occur before takeoff and could include late passengers or crew members, mechanical issues, weather restrictions on takeoffs, etc. Furthermore, the fact that all airlines show a longer box plot for arrival delays than departure delays indicates that although the average (median) flight will arrive ahead of schedule, there is greater variance in the punctuality of flights once they have taken off.
```{r, warning = F, echo=F, fig.width = 10, fig.height=10}
SBA_flights_w_Airline %>%
  select(Airline, DEP_DELAY, ARR_DELAY) %>%
  melt(
    id.vars = "Airline",
    variable.name = "Delay Type",
    value.name = "DELAY_AMT"
  ) %>%
  mutate("Delay Type" = ifelse(`Delay Type` == "DEP_DELAY", "Departure", "Arrival")) %>%
  ggplot(aes(
    x = Airline,
    y = DELAY_AMT,
    fill = `Delay Type`
  )) + 
  geom_boxplot(staplewidth = 0.25) +
  ylim(-50,300) +
  labs(x = "Airline", y = "Delay in minutes", 
       title = "Distribution of Delays by Airline",
       subtitle = "Grouped by Arrival or Departure Delay") +
  theme_minimal(base_size = 12) + 
  theme(
    axis.text.x = element_text(angle = 20))
```

By plotting departure delays against scheduled departure time for flights we see that there isn't a very strong association between scheduled departure time and departure delay for flights leaving SBA. However, we see that many relatively short delays occur in the middle of the day between 11:00 AM and 7:00 PM. In contrast, there are fewer, but larger delays in the early morning hours between 5:00 AM and 7:00 AM. By splitting this scatter plot into a separate visual for each airport, we can see that his behavior arises largely due to flights with specific destinations consistently leaving at the same time tend to have delays.
```{r, warning = F, echo = F}
SBA_flights_w_Airline %>%
  filter(DEP_DELAY > 0, ORIGIN == "SBA") %>%
  ggplot(aes(CRS_DEP_TIME, DEP_DELAY))+
  geom_point() +
  theme_minimal() +
  labs(x = "Scheduled Departure Time", y = "Departure Delay",
       title = "Departure Delay vs Scheduled Departure Time",
       subtitle = "Flights Departing SBA")
```

We can more clearly examine this by separating the flights by destination: 
```{r, echo = F, fig.width = 10, fig.height= 7}
SBA_flights_w_Airline %>%
  filter(DEP_DELAY > 0, ORIGIN == "SBA") %>%
  ggplot(aes(CRS_DEP_TIME, DEP_DELAY))+
  geom_point() +
  theme_minimal() +
  labs(x = "Scheduled Departure Time", y = "Departure Delay",
       title = "Departure Delay vs Scheduled Departure Time for Flights Departing SBA",
       subtitle = "Separated By Destination") +
  facet_wrap("DEST")
```

# Explore All Flights

Next, we examine the distribution of departure times across all our flight data. From the histogram below, we can see that the number of departures remains high throughout the majority of the day starting from 5:00 AM until 8:00 PM. At this point, the number of departures begins to steadily decrease and remains very low through the late night and early morning hours.
```{r, echo = F, warning = F}
ggplot(flights, aes(x = DEP_TIME)) +
  geom_histogram(bins = 24, binwidth = 100) +
  theme_minimal() +
  labs(x = "Departure Time", y = "No. of Flights", title = "Historgram of Departure Times")
```

Performing the same analysis on arrival times, we see that the most arrivals occur around 12:00 PM and 8:30 PM. Like departures, the number of arrivals remains high throughout most of the day, with a sudden drop after 10:00 PM, followed by a small spike in arrivals between 12:00 AM and 1:00 AM. The lowest number of arrivals occurs between 2:00 AM and 5:00 AM. Overall, the distribution of arrival times seems to be slightly shifted to the right when compared to departure times, which makes sense since a spike in departures is expected to cause a spike in arrival later in the day.
```{r, echo = F, warning = F}
ggplot(flights, aes(x = ARR_TIME)) +
  geom_histogram(bins = 24, binwidth = 100) +
  theme_minimal() +
  labs(x = "Arrival Time", y = "No. of Flights", title = "Historgram of Arrival Times")
```


Last, we can take a look at the median arrival and departure delays each month. We can see that March and June have the most arrival delays as well as the most departure delays (along with July) with the median flight arriving only 2 minutes ahead of schedule and departing exactly as scheduled. This is possibly due to harsh weather conditions during these months, but also could be caused by an increase in travelers. According to United Airlines, Spring Break, which usually occurs in March is the busiest time of the year for air travel^[https://www.nbcnews.com/business/travel/spring-break-travel-forecast-airlines-and-vacations-how-much-money-rcna141729]. An increase in air travel may also explain the increase in arrival delays in June, as this is when most students begin their Summer Break and may coincide with family summer vacations.

In contrast, the late Fall and Winter months of September through December have the least delays for both arrivals and departures. The median flight in these months typically departs 2 minutes ahead of schedule and arrived 7 or 8 minutes ahead of schedule.

```{r, echo = F}
median_delays <- flights %>%
  group_by(`MONTH`) %>%
  summarise("Median Arrival Delay" = median(ARR_DELAY, na.rm = TRUE), 
            "Median Departure Delay" = median(DEP_DELAY, na.rm = TRUE))

pander(median_delays)
```

# Scope of Inference 
Our data is collected from the The United States Bureau of Transportation Statistics (BTS), and specifically only examines flights from 2023 that routed through California. For example, if there was a flight directly from Seattle to Newark, this flight would not be included in our dataset as it did not route through California. This means that if we try to use our dataset to examine flights from a non-California airport, we will only see flights going to California.